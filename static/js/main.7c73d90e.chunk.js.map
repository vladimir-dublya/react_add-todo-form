{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","usersFromServer","todo","filteredUser","find","user","className","href","TodoInfo","TodoList","todos","map","App","useState","userSelect","setUserSelect","setTitle","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","Date","now","type","placeholder","value","onChange","e","target","required","defaultValue","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c73d90e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User, Todo } from '../../react-app-env';\n\ntype Props = {\n  usersFromServer: User[],\n  todo: Todo,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  usersFromServer,\n  todo,\n}) => {\n  const filteredUser = usersFromServer.find(\n    (user) => user.id === todo.userId,\n  );\n\n  return (\n    <>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <a className=\"UserInfo\" href={`mailto:${filteredUser?.email}`}>\n        {filteredUser?.name}\n      </a>\n    </>\n  );\n};\n","import React from 'react';\nimport { User, Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  usersFromServer: User[],\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, usersFromServer }) => {\n  return (\n    <article data-id={todo.id} className=\"TodoInfo TodoInfo--completed\">\n      <UserInfo usersFromServer={usersFromServer} todo={todo} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { User, Todo } from '../../react-app-env';\n\ntype Props = {\n  usersFromServer: User[],\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ usersFromServer, todos }) => {\n  return (\n    <section>\n      {todos.map((todo) => (\n        <TodoInfo usersFromServer={usersFromServer} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [userSelect, setUserSelect] = useState<number | null>(null);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todosFromServer);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (!userSelect) {\n            return;\n          }\n\n          setTitle('');\n\n          setTodos([\n            ...todos,\n            {\n              id: Date.now(),\n              title,\n              completed: false,\n              userId: userSelect,\n            },\n          ]);\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title:</span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title || ''}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n            <span className=\"error\">{title ? '' : 'Please enter a title'}</span>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User:</span>\n            <select\n              data-cy=\"userSelect\"\n              defaultValue=\"\"\n              value={userSelect || ''}\n              onChange={(e) => setUserSelect(+e.target.value)}\n            >\n              <option value=\"\" selected disabled>Choose a user</option>\n              {usersFromServer.map((user) => {\n                return <option value={user.id}>{user.name}</option>;\n              })}\n            </select>\n\n            <span className=\"error\">\n              {userSelect ? '' : 'Please choose a user'}\n            </span>\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList usersFromServer={usersFromServer} todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}